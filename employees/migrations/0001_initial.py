# Generated by Django 4.2.1 on 2023-05-16 21:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import phonenumber_field.modelfields


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Department",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=125)),
                (
                    "description",
                    models.CharField(blank=True, max_length=125, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
            ],
            options={
                "verbose_name": "Department",
                "verbose_name_plural": "Departments",
                "ordering": ["name", "created"],
            },
        ),
        migrations.CreateModel(
            name="Employee",
            fields=[
                (
                    "id",
                    models.CharField(
                        max_length=10,
                        primary_key=True,
                        serialize=False,
                        verbose_name="Employee ID Number",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        choices=[
                            ("Mr", "Mr"),
                            ("Mrs", "Mrs"),
                            ("Mss", "Mss"),
                            ("Dr", "Dr"),
                            ("Sir", "Sir"),
                            ("Madam", "Madam"),
                        ],
                        default="Mr",
                        max_length=5,
                        verbose_name="Title",
                    ),
                ),
                (
                    "firstname",
                    models.CharField(max_length=125, verbose_name="First Name"),
                ),
                (
                    "lastname",
                    models.CharField(max_length=125, verbose_name="Last Name"),
                ),
                (
                    "othername",
                    models.CharField(
                        blank=True,
                        max_length=125,
                        null=True,
                        verbose_name="Other Name (optional)",
                    ),
                ),
                (
                    "sex",
                    models.CharField(
                        choices=[("male", "Male"), ("female", "Female")],
                        max_length=9,
                        verbose_name="Gender",
                    ),
                ),
                (
                    "email",
                    models.CharField(
                        default=None, max_length=255, verbose_name="Email"
                    ),
                ),
                (
                    "tel",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter number with Country Code Eg. +353000000000",
                        max_length=128,
                        region=None,
                        verbose_name="Phone Number",
                    ),
                ),
                ("birthday", models.DateField(verbose_name="Birthday")),
                (
                    "address",
                    models.CharField(
                        blank=True,
                        help_text="address of current residence",
                        max_length=125,
                        null=True,
                        verbose_name="Address",
                    ),
                ),
                (
                    "education",
                    models.CharField(
                        choices=[
                            ("Masters Degree", "Masters Degree"),
                            ("Bachelor Degree", "Bachelor Degree"),
                            (
                                "Craft / Higher Certificate",
                                "Craft / Higher Certificate",
                            ),
                            ("Leaving Certificate", "Leaving Certificate"),
                            ("Junior Certificate", "Junior Certificate"),
                            ("Other", "Other"),
                        ],
                        help_text="Highest educational level",
                        max_length=26,
                        null=True,
                        verbose_name="Education",
                    ),
                ),
                (
                    "lastwork",
                    models.CharField(
                        blank=True,
                        help_text="Where was the last place you worked ?",
                        max_length=125,
                        null=True,
                        verbose_name="Last Place of Work",
                    ),
                ),
                (
                    "position",
                    models.CharField(
                        blank=True,
                        help_text="What position where you in your last place of work ?",
                        max_length=255,
                        null=True,
                        verbose_name="Position Held",
                    ),
                ),
                (
                    "startdate",
                    models.DateField(
                        help_text="date of employement",
                        null=True,
                        verbose_name="Employement Date",
                    ),
                ),
                (
                    "employeetype",
                    models.CharField(
                        choices=[
                            ("Full-Time", "Full-Time"),
                            ("Part-Time", "Part-Time"),
                            ("Contract", "Contract"),
                            ("Intern", "Intern"),
                        ],
                        default="Full-Time",
                        max_length=15,
                        null=True,
                        verbose_name="Employee Type",
                    ),
                ),
                (
                    "dateissued",
                    models.DateField(
                        help_text="date staff id was issued",
                        null=True,
                        verbose_name="Date Issued",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created"
                    ),
                ),
                (
                    "is_blocked",
                    models.BooleanField(
                        default=False,
                        help_text="button to toggle employee block and unblock",
                        verbose_name="Is Blocked",
                    ),
                ),
                (
                    "is_deleted",
                    models.BooleanField(
                        default=False,
                        help_text="button to toggle employee deleted and undelete",
                        verbose_name="Is Deleted",
                    ),
                ),
                (
                    "department",
                    models.ForeignKey(
                        default=None,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="employees.department",
                        verbose_name="Department",
                    ),
                ),
            ],
            options={
                "verbose_name": "Employee",
                "verbose_name_plural": "Employees",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Nationality",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=125)),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
            ],
            options={
                "verbose_name": "Nationality",
                "verbose_name_plural": "Nationality",
                "ordering": ["name", "created"],
            },
        ),
        migrations.CreateModel(
            name="Role",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=125)),
                (
                    "description",
                    models.CharField(blank=True, max_length=125, null=True),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
            ],
            options={
                "verbose_name": "Role",
                "verbose_name_plural": "Roles",
                "ordering": ["name", "created"],
            },
        ),
        migrations.CreateModel(
            name="Relationship",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("Married", "Married"),
                            ("Single", "Single"),
                            ("Civil Partnership", "Civil Partnership"),
                            ("Divorced", "Divorced"),
                            ("Widowed", "Widowed"),
                        ],
                        default="Single",
                        max_length=17,
                        null=True,
                        verbose_name="Marital Status",
                    ),
                ),
                (
                    "spouse",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Spouse (Full Name)",
                    ),
                ),
                (
                    "occupation",
                    models.CharField(
                        blank=True,
                        help_text="spouse occupation",
                        max_length=125,
                        null=True,
                        verbose_name="Occupation",
                    ),
                ),
                (
                    "tel",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        default=None,
                        help_text="Enter number with Country Code Eg. +353240000000",
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Spouse Phone Number",
                    ),
                ),
                (
                    "children",
                    models.PositiveIntegerField(
                        blank=True,
                        default=0,
                        null=True,
                        verbose_name="Number of Children",
                    ),
                ),
                (
                    "nextofkin",
                    models.CharField(
                        help_text="fullname of next of kin",
                        max_length=255,
                        null=True,
                        verbose_name="Next of Kin",
                    ),
                ),
                (
                    "contact",
                    phonenumber_field.modelfields.PhoneNumberField(
                        blank=True,
                        help_text="Phone Number of Next of Kin",
                        max_length=128,
                        null=True,
                        region=None,
                        verbose_name="Next of Kin Phone Number",
                    ),
                ),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("Father", "Father"),
                            ("Mother", "Mother"),
                            ("Sister", "Sister"),
                            ("Brother", "Brother"),
                            ("Uncle", "Uncle"),
                            ("Aunty", "Aunty"),
                            ("Husband", "Husband"),
                            ("Wife", "Wife"),
                            ("Fiance", "Fiance"),
                            ("Cousin", "Cousin"),
                            ("Fiancee", "Fiancee"),
                            ("Niece", "Niece"),
                            ("Nephew", "Nephew"),
                            ("Son", "Son"),
                            ("Daughter", "Daughter"),
                        ],
                        help_text="Who is this person to you ?",
                        max_length=15,
                        null=True,
                        verbose_name="Relationship with Next of Person",
                    ),
                ),
                (
                    "father",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Father's Name",
                    ),
                ),
                (
                    "mother",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Mother's Name",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employees.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Relationship",
                "verbose_name_plural": "Relationships",
                "ordering": ["created"],
            },
        ),
        migrations.AddField(
            model_name="employee",
            name="nationality",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="employees.nationality",
                verbose_name="Nationality",
            ),
        ),
        migrations.AddField(
            model_name="employee",
            name="role",
            field=models.ForeignKey(
                default=None,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="employees.role",
                verbose_name="Role",
            ),
        ),
        migrations.AddField(
            model_name="employee",
            name="user",
            field=models.ForeignKey(
                default=None,
                on_delete=django.db.models.deletion.CASCADE,
                to=settings.AUTH_USER_MODEL,
            ),
        ),
        migrations.CreateModel(
            name="Emergency",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "fullname",
                    models.CharField(
                        help_text="who should we contact ?",
                        max_length=255,
                        null=True,
                        verbose_name="Full Name",
                    ),
                ),
                (
                    "tel",
                    phonenumber_field.modelfields.PhoneNumberField(
                        help_text="Enter number with Country Code Eg. +353240000000",
                        max_length=128,
                        region=None,
                        verbose_name="Phone Number",
                    ),
                ),
                (
                    "location",
                    models.CharField(
                        max_length=125, null=True, verbose_name="Place of Residence"
                    ),
                ),
                (
                    "relationship",
                    models.CharField(
                        choices=[
                            ("Father", "Father"),
                            ("Mother", "Mother"),
                            ("Sister", "Sister"),
                            ("Brother", "Brother"),
                            ("Uncle", "Uncle"),
                            ("Aunty", "Aunty"),
                            ("Husband", "Husband"),
                            ("Wife", "Wife"),
                            ("Fiance", "Fiance"),
                            ("Cousin", "Cousin"),
                            ("Fiancee", "Fiancee"),
                            ("Niece", "Niece"),
                            ("Nephew", "Nephew"),
                            ("Son", "Son"),
                            ("Daughter", "Daughter"),
                        ],
                        help_text="Who is this person to you ?",
                        max_length=8,
                        null=True,
                        verbose_name="Relationship with Person",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(auto_now_add=True, verbose_name="Created"),
                ),
                (
                    "updated",
                    models.DateTimeField(auto_now=True, verbose_name="Updated"),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employees.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Emergency",
                "verbose_name_plural": "Emergency",
                "ordering": ["-created"],
            },
        ),
        migrations.CreateModel(
            name="Bank",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=125, null=True, verbose_name="Name of Bank"
                    ),
                ),
                (
                    "account",
                    models.CharField(
                        help_text="employee account number",
                        max_length=30,
                        null=True,
                        verbose_name="Account Number",
                    ),
                ),
                (
                    "branch",
                    models.CharField(
                        blank=True,
                        help_text="which branch was the account issue",
                        max_length=125,
                        null=True,
                        verbose_name="Branch",
                    ),
                ),
                (
                    "salary",
                    models.DecimalField(
                        decimal_places=2,
                        help_text="This is the initial salary of employee",
                        max_digits=16,
                        null=True,
                        verbose_name="Starting Salary",
                    ),
                ),
                (
                    "created",
                    models.DateTimeField(
                        auto_now_add=True, null=True, verbose_name="Created"
                    ),
                ),
                (
                    "updated",
                    models.DateTimeField(
                        auto_now=True, null=True, verbose_name="Updated"
                    ),
                ),
                (
                    "employee",
                    models.ForeignKey(
                        help_text="select employee(s) to add bank account",
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="employees.employee",
                    ),
                ),
            ],
            options={
                "verbose_name": "Bank",
                "verbose_name_plural": "Banks",
                "ordering": ["-name", "-account"],
            },
        ),
    ]
